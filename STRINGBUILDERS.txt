ADD SPACES TO STRING

class Solution {
    public String addSpaces(String s, int[] spaces) {
         char[] cstr = new char[s.length() + spaces.length];
        
        int i=0; //iterator for spaces;
        int j=0; // iterator for s;
        int k=0; // iterator for building cstr
        
        while(i < spaces.length && j < s.length()){
            int insertionindex = spaces[i];
            
            while(j < insertionindex && j < s.length()){
                cstr[k] = s.charAt(j);
                k++;
                j++;
            }
            // insert spaces
            cstr[k] = ' ';
            k++;
            i++;
        }
        
        while(j < s.length()){
            cstr[k] = s.charAt(j);
            k++;
            j++;
        }
        return new String(cstr);
        
    }
}


1. PRINT ALL PALINDROMIC SUBSTRINGS
package automate;
import java.io.*;
import java.util.*;

public class MyClass {   
	
	public static void solution(String str){
		for(int i = 0 ; i < str.length(); i++){
			for(int j = i + 1; j <= str.length(); j++){
				String ss = str.substring(i, j);
				if(isPalindrome(ss)){
					System.out.println(ss);
				}
			}
		}
	}

	public static boolean isPalindrome(String str){
		int i = 0;
		int j = str.length() - 1;
		while(i <= j){
			
			char ch1 = str.charAt(i);
			char ch2 = str.charAt(j);
			
			if(ch1 != ch2) {
				return false;
			} else {
				i++;
				j--;
			}
		}		
		return true;
	}
	
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		System.out.println("Enter the value");
		String str = scn.next();
		solution(str);
	}

}


2. STRING COMPRESSION
package automate;
import java.io.*;
import java.util.*;

public class MyClass {   
	
	public static String compression1(String str){
		String s = str.charAt(0) + "";
		
		
		for(int i = 1 ; i < str.length(); i++){
			char curr = str.charAt(i);
			char prev = str.charAt(i - 1);
			
			if(curr != prev) {
				s += curr;
			}
		}
		return s;
	}

	public static String compression2(String str){
     String s = str.charAt(0) + "";
	 int count = 1;
	 
		
		for(int i = 1 ; i < str.length(); i++){
			char curr = str.charAt(i);
			char prev = str.charAt(i - 1);
			
			if(curr == prev) {
				count++;
			} else {
				if(count > 1) {
					s += count;
					count = 1;
				}
				s += curr;
			}
		}
		if(count > 1) {
			s += count;
			count = 1;
		}
		return s;
	}
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		System.out.println("Enter the value");
		String str = scn.next();
		System.out.println(compression1(str));
		System.out.println(compression2(str));
	}

}


3. REMOVE PRIMES
package automate;
import java.io.*;
import java.util.*;

public class MyClass {   
	

	public static void solution(ArrayList<Integer> al){
		for(int i = al.size() - 1; i >= 0; i--){
			int val = al.get(i);
			if(isPrime(val) == true){
				al.remove(i);
			}
		}
	}

	
	public static boolean isPrime(int n){
		int temp;
		for(int i = 2;  i <= n/2; i++){
			temp = n % i;
			if(temp == 0){
				return false;
				
			}
		}
		return true;
	}
		
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		System.out.println("Enter the value");
		int n = scn.nextInt();
		ArrayList<Integer> al = new ArrayList<>();
		for(int i = 0 ; i < n; i++){
			al.add(scn.nextInt());
		}
		solution(al);
		System.out.println(al);
	}

}

4. TOGGLE CHARACTER
package automate;
import java.io.*;
import java.util.*;

public class MyClass {   
	
	public static String toggleCase(String str){
	StringBuilder ans = new StringBuilder();
	for(int i = 0 ; i < str.length(); i++){
		char ch = str.charAt(i);
		if(ch >= 'a' && ch <= 'z'){
			ans.append((char)( 'A' + ch - 'a') + "");
		}else{
			ans.append((char)('a' + ch - 'A') + "");
		}
	}
	return ans.toString();
}
public static void main(String[] args) {
	Scanner scn = new Scanner(System.in);
	System.out.println("Enter the value");
	String str = scn.next();
	System.out.println(toggleCase(str));
}

}


 5. STRING WITH ASCII DIFFERENCE OF CHARACTERS
package automate;
import java.io.*;
import java.util.*;

public class MyClass {   
	
	public static String solution(String str){
		StringBuilder ans = new StringBuilder();
		ans.append(str.charAt(0));
		
		for(int i = 1 ; i < str.length(); i++){
			char curr = str.charAt(i);
			char prev = str.charAt(i - 1);
			int gap = curr - prev;
			
			ans.append(gap);
			ans.append(curr);
	}
		return ans.toString();
	}
	
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		System.out.println("Enter the value");
		String str = scn.next();
		System.out.println(solution(str));
	}

}


      
6. PERMUTATION OF STRING
package automate;
import java.io.*;
import java.util.*;

public class MyClass {   
	
	public static void solution(String str){
		int n = str.length();
		int f = factorial(n);
	
		for(int i = 0; i < f; i++) {
			StringBuilder sb = new StringBuilder(str);
			int temp = i;
			
			for(int div = n; div >=1; div--) {
				int q = temp / div;
				int r = temp % div;
				
				System.out.print(sb.charAt(r));
				sb.deleteCharAt(r);
				
				temp = q;
			}
			
			System.out.println();
		}
	}
	
	public static int factorial(int n){
		int ans = 1;
		for(int i = 2; i <= n; i++){
			ans *= i;
		}
		return ans;
	}
	
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		System.out.println("Enter the value");
		String str = scn.next();
		solution(str);
	}

}


      

                    
                                                       	                                   